apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: cp4i
  namespace: default
spec:
  finally:
    - name: output-usage
      params:
        - name: SCRIPT
          value: >-
            export URL=$(oc get consolelink -l app.kubernetes.io/name=ibm-integration-platform-navigator -o jsonpath='{.items[].spec.href}') 
            
            export INITIAL_PASSWORD=$(oc -n ibm-common-services get secret platform-auth-idp-credentials -o jsonpath='{.data.admin_password}' | base64 -d && echo)

            echo "Platform UI URL:" 
            
            echo $URL 
            
            echo "Initial admin password:"

            echo $INITIAL_PASSWORD

            oc delete configmap/pipeline-output -n default --ignore-not-found=true 
            
            oc create configmap pipeline-output -n default 
            
            oc patch configmap/pipeline-output -p "{\"data\":{\"msg\":\"Pipeline run completed\",\"url\":\"${URL}\",\"username\":\"admin\",\"password\":\"${INITIAL_PASSWORD}\"}}"
        - name: VERSION
          value: latest
      taskRef:
        kind: Task
        name: ibm-pak
  params:
    - default: integration
      description: Namespace to deploy Platform UI
      name: CP4I_NAMESPACE
      type: string
    - default: 16.1.1
      description: Version of CP4I Platform UI to deploy
      name: CP4I_VERSION
      type: string
    - default: 'true'
      description: Deploy Asset repository operator
      name: DEPLOY_ASSET_REPOSITORY_OPERATOR
      type: string
    - default: 'true'
      description: Deploy API Connect operator
      name: DEPLOY_API_CONNECT_OPERATOR
      type: string
    - default: 'true'
      description: Deploy App Connect operator
      name: DEPLOY_APP_CONNECT_OPERATOR
      type: string
    - default: 'true'
      description: Deploy MQ operator
      name: DEPLOY_MQ_OPERATOR
      type: string
    - default: 'true'
      description: Deploy Event Streams operator
      name: DEPLOY_EVENT_STREAMS_OPERATOR
      type: string
    - default: 'true'
      description: Deploy Event Endpoint Management operator
      name: DEPLOY_EVENT_ENDPOINT_MANAGEMENT_OPERATOR
      type: string
    - default: 'true'
      description: Deploy DataPower Gateway operator
      name: DEPLOY_DATAPOWER_GATEWAY_OPERATOR
      type: string
    - default: 'false'
      description: Deploy Aspera HSTS operator
      name: DEPLOY_ASPERA_HSTS_OPERATOR
      type: string
    - default: a65ac528-bbca-1425-8d07-fde9e2f1ff70
      name: IBM_ENTITLEMENT_KEY_ID
      type: string
    - default: 'true'
      description: Deploy platform UI
      name: DEPLOY_PLATFORM_UI
      type: string
    - default: >-
        https://afa20521-cd75-4864-843f-e59fd0ffd49d.us-south.secrets-manager.appdomain.cloud
      name: IBM_SECRETS_MANAGER_ENDPOINT
      type: string
    - default: ocs-storagecluster-cephfs
      description: Platform UI storage class (RWX)
      name: PLATFORM_UI_STORAGE_CLASS
      type: string
    - default: 'true'
      name: COPY_TLS_CERTS
      type: string
  tasks:
    - name: create-namespace
      params:
        - name: SCRIPT
          value: |-
            echo "Creating a new namespace called $(params.CP4I_NAMESPACE)"
            oc apply -f - <<EOF
            apiVersion: v1
            kind: Namespace
            metadata:
              name: $(params.CP4I_NAMESPACE)
            EOF
        - name: VERSION
          value: latest
      taskRef:
        kind: Task
        name: ibm-pak
    - name: get-entitlement-key
      params:
        - name: KEY_ID
          value: $(params.IBM_ENTITLEMENT_KEY_ID)
        - name: SECRETS_MANAGER_ENDPOINT_URL
          value: $(params.IBM_SECRETS_MANAGER_ENDPOINT)
      runAfter:
        - create-namespace
      taskRef:
        kind: Task
        name: ibmcloud-secrets-manager-get
    - name: create-ibm-entitlement-key
      params:
        - name: SCRIPT
          value: >-
            if oc get secret ibm-entitlement-key -n $(params.CP4I_NAMESPACE)
            >/dev/null 2>&1; then
              username=$(oc get secret ibm-entitlement-key -n $(params.CP4I_NAMESPACE) -o jsonpath='{.data.\.dockerconfigjson}' | base64 -d | jq -r '.auths."cp.icr.io".username')
              password=$(oc get secret ibm-entitlement-key -n $(params.CP4I_NAMESPACE) -o jsonpath='{.data.\.dockerconfigjson}' | base64 -d | jq -r '.auths."cp.icr.io".password')

              if [ "$username" == "cp" ] && [ "$password" == "$(tasks.get-entitlement-key.results.secret-value)" ]; then
                echo "Secret ibm-entitlement-key was already created. Skipping secret creation"
                exit 0
              else
                echo "Existing ibm-entitlement-key password does not match retrieved key. Deleting..."
                oc delete secret ibm-entitlement-key -n $(params.CP4I_NAMESPACE) --ignore-not-found=true
              fi
            fi

            echo "Creating new ibm-entitlement-key secret"

            oc create secret docker-registry ibm-entitlement-key \
                --docker-username=cp \
                --docker-password=$(tasks.get-entitlement-key.results.secret-value) \
                --docker-server=cp.icr.io \
                --namespace=$(params.CP4I_NAMESPACE)
        - name: VERSION
          value: latest
      runAfter:
        - get-entitlement-key
      taskRef:
        kind: Task
        name: ibm-pak
    - name: ibm-cp-common-services-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-cp-common-services
        - name: CASE_VERSION
          value: 4.6.8
        - name: ARCHITECTURE
          value: ''
      runAfter:
        - create-ibm-entitlement-key
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
    - name: ibm-cp-common-services-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: ibm-common-service-operator
              namespace: openshift-operators
            spec:
              channel: v4.6
              name: ibm-common-service-operator
              source: opencloud-operators
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      runAfter:
        - ibm-cp-common-services-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2    
    - name: platform-ui-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              name: ibm-integration-platform-navigator
              namespace: openshift-operators
            spec:
              channel: v8.0
              name: ibm-integration-platform-navigator
              source: ibm-integration-platform-navigator-catalog
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      runAfter:
        - ibm-cp-common-services-operator
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
    - name: platform-ui-instance
      params:
        - name: SCRIPT
          value: >-
            if [[ "$(params.DEPLOY_PLATFORM_UI)" == "true" ]]; then
              echo "Creating a new platform UI instance"
            else
              echo "Skipping platform UI instance creation."
              exit 0
            fi


            oc apply -f - <<EOF

            apiVersion: integration.ibm.com/v1beta1

            kind: PlatformNavigator

            metadata:
              name: integration-quickstart
              namespace: $(params.CP4I_NAMESPACE)
            spec:
              license:
                accept: true
                license: L-QYVA-B365MB
              replicas: 1
              version: $(params.CP4I_VERSION)
              storage:
                class: $(params.PLATFORM_UI_STORAGE_CLASS)
            EOF



            echo "Waiting for Platform UI to be deployed..."


            while ! oc wait --for=condition=Ready
            PlatformNavigator/integration-quickstart -n
            $(params.CP4I_NAMESPACE)  2>/dev/null; do sleep 30; done


            echo "Platform UI is deployed"
        - name: VERSION
          value: latest
      retries: 3
      runAfter:
        - platform-ui-operator
      taskRef:
        kind: Task
        name: ibm-pak
      timeout: 3h0m0s
    - name: copy-ingress-tls
      params:
        - name: namespace
          value: $(params.CP4I_NAMESPACE)
      runAfter:
        - platform-ui-instance
      taskRef:
        kind: Task
        name: ibm-tls-certs
      when:
        - input: $(params.COPY_TLS_CERTS)
          operator: in
          values:
            - 'true'
    - name: patch-platform-ui-tls
      params:
        - name: SCRIPT
          value: >-
            oc patch PlatformNavigator integration-quickstart --type merge
            --patch '{"spec":{"tls": { "secretName": "custom-tls-secret" }}}' -n
            $(params.CP4I_NAMESPACE)

            echo "Waiting for Platform UI to be ready..."


            while ! oc wait --for=condition=Ready
            PlatformNavigator/integration-quickstart -n
            $(params.CP4I_NAMESPACE)  2>/dev/null; do sleep 30; done


            echo "Platform UI is ready"
      runAfter:
        - run-check
      taskRef:
        kind: Task
        name: ibm-pak
    - name: asset-repository-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-integration-asset-repository
        - name: CASE_VERSION
          value: 1.8.4
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_ASSET_REPOSITORY_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: asset-repository-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
              name: ibm-integration-asset-repository
              namespace: openshift-operators
            spec:
              channel: v1.8
              installPlanApproval: Automatic
              name: ibm-integration-asset-repository
              source: ibm-integration-asset-repository-catalog
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - asset-repository-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_ASSET_REPOSITORY_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: apic-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-apiconnect
        - name: CASE_VERSION
          value: 6.0.0
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_API_CONNECT_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: apic-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/ibm-apiconnect.openshift-operators: ""
              name: ibm-apiconnect
              namespace: openshift-operators
            spec:
              channel: v6.0
              installPlanApproval: Automatic
              name: ibm-apiconnect
              source: ibm-apiconnect-catalog
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - apic-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_API_CONNECT_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: appconnect-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-appconnect
        - name: CASE_VERSION
          value: 12.12.0
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_APP_CONNECT_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: appconnect-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/ibm-appconnect.openshift-operators: ""
              name: ibm-appconnect
              namespace: openshift-operators
            spec:
              channel: v12.11
              installPlanApproval: Automatic
              name: ibm-appconnect
              source: appconnect-operator-catalogsource
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - appconnect-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_APP_CONNECT_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: mq-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-mq
        - name: CASE_VERSION
          value: 3.5.3
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_MQ_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: mq-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/ibm-mq.openshift-operators: ""
              name: ibm-mq
              namespace: openshift-operators
            spec:
              channel: v3.5
              installPlanApproval: Automatic
              name: ibm-mq
              source: ibmmq-operator-catalogsource
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - mq-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_MQ_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: es-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-eventstreams
        - name: CASE_VERSION
          value: 3.7.0
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_EVENT_STREAMS_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: es-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/ibm-eventstreams.openshift-operators: ""
              name: ibm-eventstreams
              namespace: openshift-operators
            spec:
              channel: v3.7
              installPlanApproval: Automatic
              name: ibm-eventstreams
              source: ibm-eventstreams
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - es-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_EVENT_STREAMS_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: eem-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-eventendpointmanagement
        - name: CASE_VERSION
          value: 11.5.1
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_EVENT_ENDPOINT_MANAGEMENT_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: eem-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/ibm-eventendpointmanagement.openshift-operators: ""
              name: ibm-eventendpointmanagement
              namespace: openshift-operators
            spec:
              channel: v11.5
              installPlanApproval: Automatic
              name: ibm-eventendpointmanagement
              source: ibm-eventendpointmanagement-catalog
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - eem-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_EVENT_ENDPOINT_MANAGEMENT_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: dp-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-datapower-operator
        - name: CASE_VERSION
          value: 1.14.1
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_DATAPOWER_GATEWAY_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: dp-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/datapower-operator.openshift-operators: ""
              name: datapower-operator-v1.13-ibm-datapower-operator-catalog-openshift-marketplace
              namespace: openshift-operators
            spec:
              channel: v1.13
              installPlanApproval: Automatic
              name: datapower-operator
              source: ibm-datapower-operator-catalog
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - dp-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_DATAPOWER_GATEWAY_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: aspera-catalog-source
      params:
        - name: SCRIPT
          value: ''
        - name: CASE_NAME
          value: ibm-aspera-hsts-operator
        - name: CASE_VERSION
          value: 1.5.18
        - name: ARCHITECTURE
          value: ''
      retries: 3
      runAfter:
        - patch-platform-ui-tls
      taskRef:
        kind: Task
        name: ibm-pak-apply-catalog-source
      when:
        - input: $(params.DEPLOY_ASPERA_HSTS_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: aspera-operator
      params:
        - name: SUBSCRIPTION
          value: |
            apiVersion: operators.coreos.com/v1alpha1
            kind: Subscription
            metadata:
              labels:
                operators.coreos.com/aspera-hsts-operator.openshift-operators: ""
              name: aspera-hsts-operator
              namespace: openshift-operators
            spec:
              channel: v1.5
              installPlanApproval: Automatic
              name: aspera-hsts-operator
              source: aspera-operators
              sourceNamespace: openshift-marketplace
        - name: SCRIPT
          value: ''
      retries: 3
      runAfter:
        - aspera-catalog-source
      taskRef:
        kind: Task
        name: apply-olm-subscription-v0.2
      when:
        - input: $(params.DEPLOY_ASPERA_HSTS_OPERATOR)
          operator: in
          values:
            - 'true'
    - name: proceed
      params:
        - name: SCRIPT
          value: printf "true" | tee $(results.output.path)
      runAfter:
        - platform-ui-instance
      taskRef:
        kind: Task
        name: ibm-pak-0.2
    - name: run-check
      params:
        - name: SCRIPT
          value: >-
            if [ "$(tasks.proceed.results.output)" = "true" ] || [
            "$(params.COPY_TLS_CERTS)" = "true" ]; then
              echo "Proceeding"
              exit 0
            else
              echo "Not proceeding"
              exit 1
            fi
      runAfter:
        - copy-ingress-tls
        - proceed
      taskRef:
        kind: Task
        name: ibm-pak-0.2
